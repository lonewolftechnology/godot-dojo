<?xml version="1.0" encoding="UTF-8" ?>
<class name="Account" inherits="Node" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		Represents a Starknet account.
	</brief_description>
	<description>
		This class is used to interact with a Starknet account. It allows you to execute transactions, query account information, and manage account state. It is a fundamental part of interacting with the Starknet network.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="create">
			<return type="void" />
			<param index="0" name="rpc_url" type="String" />
			<param index="1" name="address" type="String" />
			<param index="2" name="private_key" type="String" />
			<description>
				Initializes the account with the given RPC URL, address, and private key.
			</description>
		</method>
		<method name="deploy_burner">
			<return type="void" />
			<param index="0" name="master_account" type="Account" />
			<param index="1" name="signing_key" type="String" />
			<description>
				Deploys a new burner account using a master account to pay for the deployment fees. The [code]signing_key[/code] is the private key for the new burner account.
			</description>
		</method>
		<method name="execute_raw">
			<return type="void" />
			<param index="0" name="to" type="String" />
			<param index="1" name="selector" type="String" />
			<param index="2" name="calldata" type="Variant" default="[]" />
			<description>
				Executes a raw transaction. [code]to[/code] is the contract address, [code]selector[/code] is the function selector, and [code]calldata[/code] is an array of arguments for the function.
			</description>
		</method>
		<method name="get_address" qualifiers="const">
			<return type="String" />
			<description>
				Returns the address of the account.
			</description>
		</method>
		<method name="get_chain_id" qualifiers="const">
			<return type="String" />
			<param index="0" name="parse" type="bool" default="false" />
			<description>
				Returns the chain ID of the network. If [code]parse[/code] is [code]true[/code], it returns the parsed chain ID.
			</description>
		</method>
		<method name="get_nonce" qualifiers="const">
			<return type="String" />
			<description>
				Returns the current nonce of the account.
			</description>
		</method>
		<method name="is_account_valid" qualifiers="const">
			<return type="bool" />
			<description>
				Returns [code]true[/code] if the account is valid and ready to be used, [code]false[/code] otherwise.
			</description>
		</method>
		<method name="set_block_id">
			<return type="void" />
			<param index="0" name="block_id" type="String" default="&quot;&quot;" />
			<description>
				Sets the block ID to be used for transactions. If empty, it defaults to the latest block.
			</description>
		</method>
		<method name="start_provider">
			<return type="void" />
			<description>
				Starts the JSON-RPC provider for the account.
			</description>
		</method>
	</methods>
	<signals>
		<signal name="transaction_executed">
			<param index="0" name="success_message" type="Dictionary" />
			<description>
				Emitted when a transaction is successfully executed. The [code]success_message[/code] contains the transaction receipt.
			</description>
		</signal>
		<signal name="transaction_failed">
			<param index="0" name="error_message" type="Dictionary" />
			<description>
				Emitted when a transaction fails. The [code]error_message[/code] contains details about the error.
			</description>
		</signal>
	</signals>
</class>
